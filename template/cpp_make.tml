
.PHONY: default exec deps pch obj clean

##
# Default compile options
# With automatic precompiled header
#
CXX = g++
VPATH = src:$(SRCDIR)
SRCDIR = ./
PCH = stdafx.h
BIN = out.exe
OBJ = main.o
LDFLAGS = -s
CPPFLAGS = -pipe -I. -I$(SRCDIR)
	# -Wall -Werror -DNDEBUG -D_GLIBCXX_DEBUG

default:
	@$(MAKE) -j 2 $(BIN)

$(BIN): $(OBJ)
	$(CXX) $(OBJ) $(LDFLAGS) -o $@

$(PCH).gch: $(PCH)
	$(CXX) $^ $(CPPFLAGS) -o $@

include $(wildcard dependencies.make)


##
# Default clean options
# Cleans objects and precompiled header
#
RM = rm -f

clean:
	$(RM) $(OBJ) $(PCH).gch

cleanall:
	$(RM) $(BIN) $(OBJ) $(PCH).gch dependencies.make


##
# Non default Makefile commands
# For executing binary, calulating dependecies, generating source of
# precompiled header and finding all objects.
# Posix required!
#
exec:
	./$(BIN) && read -p pause
deps:
	find $(SRCDIR) "(" -name "*.cpp" -o -name "*.c" -o -name "*.cc" ")" -printf "%P\n" | while read f; do $(CXX) -I$(SRCDIR) -MT "$${f%.*}.o" -MM "$(SRCDIR)$$f";done | sed -e 's/[/.]*$(PCH)/$(PCH).gch/g' > dependencies.make
pch:
	(find $(SRCDIR) "(" -name "*.h" -o -name "*.hpp" -o -name "*.cpp" -o -name "*.c" -o -name "*.cc" ")" ! -name "stdafx.h" -exec cat '{}' ';' | grep "^#include <" | grep -v "$(PCH)" | sort | uniq; echo) | tr -d "\r" > $(SRCDIR)stdafx.h
obj:
	echo -e '/OBJ =\n.d\n.-1r !find $(SRCDIR) "(" -name "*.cpp" -o -name "*.c" -o -name "*.cc" ")" -printf \%P\ \n.s/\.cpp/.o/g\n.s/\.cc/.o/g\n.s/\.c/.o/g\ni\nOBJ = \n.\nj\nwq' | ed Makefile
btree:
	find $(SRCDIR) -type d -printf '%P\0' | xargs -0 -r mkdir -p

